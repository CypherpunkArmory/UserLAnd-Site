{"version":3,"sources":["webpack:///./src/components/Login/LoginForm.js","webpack:///./src/components/Modal/StatusModal.js","webpack:///./src/pages/login.js","webpack:///./src/components/seo.js","webpack:///./src/components/Button/index.js","webpack:///./src/components/TextFieldGroup/index.js","webpack:///./src/utils/validation.js","webpack:///./src/components/Modal/index.js"],"names":["LoginForm","submitedTimer","state","email","password","errors","submited","isValid","_validateInput","validateInput","_this","setState","handleUpdate","event","_this$setState","target","name","value","handleSubmit","preventDefault","props","login","setTimeout","componentWillUnmount","clearInterval","this","render","_this2","_this$state","_this$props","loginError","authIsLoading","react_default","a","createElement","Form","onSubmit","className","TextFieldGroup","label","type","field","onChange","id","placeholder","error","attributes","detail","Button","disabled","round","gatsby_browser_entry","to","Component","connect","getError","isLoggedIn","getIsLoggedIn","dispatch","performEmailLogin","request","StatusModal","modal","toggleModal","prevState","failure","title","description","icon","faTimesCircle","faCheckCircle","statusTitle","btnName","Modal","handlesClose","getClassName_default","classNames","modal_success","modal_failure","_styleModuleImportMap","index_es","onClick","danger","defaultProps","Login","location","signupSuccess","_","has","errorMessage","seo","StatusModal_StatusModal","Login_LoginForm","React","SEO","_ref","lang","meta","children","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","content","property","author","concat","Tag","tag","_objectWithoutPropertiesLoose","href","react__WEBPACK_IMPORTED_MODULE_6___default","Object","assign","undefined","babel_plugin_react_css_modules_dist_browser_getClassName__WEBPACK_IMPORTED_MODULE_5___default","btn_round","btn_primary","btn_danger","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","reactstrap__WEBPACK_IMPORTED_MODULE_2__","reactstrap__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_6__","for","hidden","invalid","tooltip","prototype","PropTypes","string","isRequired","object","func","d","__webpack_exports__","validator__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_1__","hasOwnProperty","isEmpty","isEmail","domain_specific_validation","oldPassword","newPassword","componentDidMount","document","body","classList","add","remove","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_2__","faTimes"],"mappings":"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","file":"component---src-pages-login-js-73308e926eed4973df17.js","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'gatsby'\nimport { Form } from 'reactstrap'\n\nimport './login.module.scss'\n\nimport Button from '../Button'\nimport TextFieldGroup from '../TextFieldGroup'\n\nimport { validateInput } from '../../utils/validation'\nimport { performEmailLogin } from '../../redux/ducks/auth/actions'\nimport {\n  getIsLoggedIn,\n  authIsLoading,\n  getError,\n} from '../../redux/ducks/auth/selectors'\n\nclass LoginForm extends Component {\n  submitedTimer = null\n\n  state = {\n    email: '',\n    password: '',\n    errors: {},\n    submited: false,\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.submitedTimer)\n  }\n\n  isValid = () => {\n    const { errors, isValid } = validateInput(this.state)\n    this.setState({\n      errors,\n    })\n    return isValid\n  }\n\n  handleUpdate = event => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n\n    if (this.isValid()) {\n      this.props.login(this.state.email, this.state.password)\n    }\n    this.setState({\n      submited: true,\n    })\n    this.submitedTimer = setTimeout(() => {\n      this.setState({\n        submited: false,\n      })\n    }, 4400)\n  }\n\n  render() {\n    const { errors, submited } = this.state\n    const { loginError, authIsLoading } = this.props\n\n    return (\n      <Form\n        onSubmit={event => {\n          this.handleSubmit(event)\n        }}\n        className=\"mx-auto text-center\"\n        styleName=\"form\"\n      >\n        <TextFieldGroup\n          label=\"Email\"\n          type=\"email\"\n          field=\"email\"\n          onChange={this.handleUpdate}\n          id=\"loginEmail\"\n          placeholder=\"Enter Email\"\n          styleName=\"form__input\"\n          error={errors.email}\n        />\n        <TextFieldGroup\n          label=\"Password\"\n          type=\"password\"\n          field=\"password\"\n          onChange={this.handleUpdate}\n          id=\"loginPassword\"\n          placeholder=\"Password\"\n          styleName=\"form__input\"\n          error={errors.password}\n        />\n        {loginError && submited && (\n          <span styleName=\"form__alert\">{loginError.attributes.detail}</span>\n        )}\n        <Button styleName=\"form__btn\" disabled={authIsLoading} round>\n          Login\n        </Button>\n        <span styleName=\"form__signup\">\n          Don't have an account? <Link to=\"/\">Sign up</Link>\n        </span>\n        <span styleName=\"form__signup\" className=\"mt-1\">\n          Forgot Your Password? <Link to=\"/account-recovery\">Reset</Link>\n        </span>\n      </Form>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    loginError: getError(state),\n    isLoggedIn: getIsLoggedIn(state),\n    authIsLoading: authIsLoading(state),\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (email, password) => {\n      dispatch(performEmailLogin.request(email, password))\n    },\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginForm)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport './modal.module.scss'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimesCircle, faCheckCircle } from '@fortawesome/free-solid-svg-icons'\n\nimport Modal from '.'\nimport Button from '../Button'\n\nexport default class StatusModal extends Component {\n  state = {\n    modal: false,\n  }\n\n  static propTypes = {\n    title: PropTypes.string,\n    description: PropTypes.string,\n    failure: PropTypes.bool,\n  }\n\n  static defaultProps = {\n    title: '',\n    description: '',\n    failure: false,\n  }\n\n  toggleModal = () => {\n    this.setState(prevState => ({\n      modal: !prevState.modal,\n    }))\n  }\n\n  render() {\n    const { failure, title, description } = this.props\n    const icon = failure ? faTimesCircle : faCheckCircle\n    const statusTitle = failure ? 'Failure' : 'Success'\n    const btnName = failure ? 'Okay' : 'Continue'\n\n    return this.state.modal ? null : (\n      <Modal\n        handlesClose={this.toggleModal}\n        styleName={classNames({\n          modal_success: !failure,\n          modal_failure: failure,\n        })}\n      >\n        <FontAwesomeIcon icon={icon} styleName=\"modal__icon\" />\n        <h2 styleName=\"modal__title\">{title || statusTitle}</h2>\n        {description && <p styleName=\"modal__description\">{description}</p>}\n        <Button onClick={this.toggleModal} round danger={failure}>\n          {btnName}\n        </Button>\n      </Modal>\n    )\n  }\n}\n","import React from 'react'\nimport _ from 'lodash'\n\nimport SEO from '../components/seo'\n\nimport LoginForm from '../components/Login/LoginForm'\nimport StatusModal from '../components/Modal/StatusModal'\n\nclass Login extends React.Component {\n  render() {\n    const { location } = this.props\n    const signupSuccess = _.has(location, 'state.signupSuccess')\n      ? location.state.signupSuccess\n      : false\n    const errorMessage = _.has(location, 'state.errorMessage')\n      ? location.state.errorMessage\n      : false\n\n    return (\n      <div className=\"page\">\n        <SEO title=\"UserLAnd Login\" />\n        {signupSuccess && (\n          <StatusModal\n            title=\"Your registration was successful!\"\n            description=\"Your registration was successful, you can now login.\"\n          />\n        )}\n        {errorMessage && (\n          <StatusModal title=\"Sorry\" description={errorMessage} failure />\n        )}\n        <div className=\"container page__header\">\n          <h2>Login</h2>\n        </div>\n        <div className=\"container mb-5\">\n          <LoginForm />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Login\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s - ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    >\n      {children}\n    </Helmet>\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  children: PropTypes.node,\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport './button.module.scss'\n\nfunction Button(props) {\n  let {\n    children,\n    icon,\n    tag: Tag,\n    className,\n    danger,\n    round,\n    ...attributes\n  } = props\n\n  if (attributes.href && Tag === 'button') {\n    Tag = 'a'\n  }\n\n  return (\n    <Tag\n      styleName={classNames('btn', {\n        btn_round: round,\n        btn_primary: !danger,\n        btn_danger: danger,\n      })}\n      className={className}\n      type={Tag === 'button' && attributes.onClick ? 'button' : undefined}\n      {...attributes}\n    >\n      {children}\n      {icon && <span styleName=\"icon\" />}\n    </Tag>\n  )\n}\n\nButton.propTypes = {\n  active: PropTypes.bool,\n  'aria-label': PropTypes.string,\n  disabled: PropTypes.bool,\n  tag: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.string,\n    PropTypes.object,\n  ]),\n  innerRef: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.func,\n    PropTypes.string,\n  ]),\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  danger: PropTypes.bool,\n  round: PropTypes.bool,\n}\n\nButton.defaultProps = {\n  tag: 'button',\n  danger: false,\n  round: false,\n}\n\nexport default Button\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { FormGroup, Label, Input, FormFeedback } from 'reactstrap'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport './TextFieldGroup.module.scss'\n\nfunction TextFieldGroup({\n  field,\n  type,\n  label,\n  placeholder,\n  id,\n  error,\n  onChange,\n  className,\n}) {\n  return (\n    <FormGroup styleName=\"form\">\n      <Label for={id} hidden>\n        {label}\n      </Label>\n      <Input\n        type={type}\n        name={field}\n        onChange={onChange}\n        id={id}\n        placeholder={placeholder}\n        invalid={!!error}\n        className={className}\n      />\n      {error && (\n        <FormFeedback tooltip>\n          <FontAwesomeIcon icon={['fa', 'exclamation-triangle']} />\n          {error}\n        </FormFeedback>\n      )}\n    </FormGroup>\n  )\n}\n\nTextFieldGroup.prototype = {\n  field: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  id: PropTypes.string,\n  error: PropTypes.object,\n  onChange: PropTypes.func.isRequired,\n}\n\nexport default TextFieldGroup\n","import { isEmail } from 'validator'\nimport { isEmpty } from 'lodash'\n\nexport const validateInput = data => {\n  let errors = {}\n\n  if (data.hasOwnProperty('email')) {\n    if (isEmpty(data.email)) {\n      errors.email = 'This field is required'\n    }\n    if (!isEmail(data.email, { domain_specific_validation: true })) {\n      errors.email = 'Email is invalid'\n    }\n  }\n\n  if (data.hasOwnProperty('password') && isEmpty(data.password)) {\n    errors.password = 'This field is required'\n  }\n\n  if (data.hasOwnProperty('oldPassword') && isEmpty(data.oldPassword)) {\n    errors.oldPassword = 'This field is required'\n  }\n\n  if (data.hasOwnProperty('newPassword') && isEmpty(data.newPassword)) {\n    errors.newPassword = 'This field is required'\n  }\n\n  return {\n    errors,\n    isValid: isEmpty(errors),\n  }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport './modal.module.scss'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nexport default class Modal extends Component {\n  static propTypes = {\n    handlesClose: PropTypes.func,\n    className: PropTypes.string,\n    children: PropTypes.node,\n  }\n\n  componentDidMount() {\n    document.body.classList.add('no-scroll')\n  }\n  componentWillUnmount() {\n    document.body.classList.remove('no-scroll')\n  }\n  render() {\n    const { children, handlesClose, className } = this.props\n    return (\n      <div className={className} styleName=\"modal\">\n        <div styleName=\"modal__card\">\n          <button styleName=\"modal__close\" onClick={handlesClose}>\n            <FontAwesomeIcon icon={faTimes} />\n          </button>\n          {children}\n        </div>\n      </div>\n    )\n  }\n}\n"],"sourceRoot":""}
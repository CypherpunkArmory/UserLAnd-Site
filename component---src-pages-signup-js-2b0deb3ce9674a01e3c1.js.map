{"version":3,"sources":["webpack:///./src/components/Signup/SignupForm.js","webpack:///./src/pages/signup.js","webpack:///./src/components/seo.js","webpack:///./src/components/Button/index.js","webpack:///./src/redux/ducks/account/selectors.js","webpack:///./src/components/TextFieldGroup/index.js","webpack:///./src/utils/validation.js","webpack:///./src/components/Spinner/PageSpinner.js"],"names":["SignupForm","submitedTimer","state","email","password","errors","submited","isValid","_validateInput","validateInput","_this","setState","handleUpdate","event","_this$setState","target","name","value","handleSubmit","preventDefault","props","signup","setTimeout","componentWillUnmount","clearInterval","this","render","_this2","_this$state","_this$props","signupError","isLoading","react_default","a","createElement","Form","onSubmit","className","TextFieldGroup","label","type","field","onChange","id","placeholder","error","attributes","detail","Button","disabled","round","gatsby_browser_entry","to","Component","connect","getError","accountIsLoading","isLoggedIn","getIsLoggedIn","dispatch","performRegister","request","Signup","PageSpinner","seo","title","Signup_SignupForm","defaultProps","SEO","_ref","description","lang","meta","children","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","content","property","author","concat","icon","Tag","tag","danger","_objectWithoutPropertiesLoose","href","react__WEBPACK_IMPORTED_MODULE_6___default","Object","assign","onClick","undefined","babel_plugin_react_css_modules_dist_browser_getClassName__WEBPACK_IMPORTED_MODULE_5___default","classNames","btn_round","btn_primary","btn_danger","_styleModuleImportMap","__webpack_require__","d","__webpack_exports__","getAccountDetails","reselect__WEBPACK_IMPORTED_MODULE_0__","getAccount","accountState","account","createSelector","access_token","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","reactstrap__WEBPACK_IMPORTED_MODULE_2__","reactstrap__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_6__","for","hidden","invalid","tooltip","prototype","PropTypes","string","isRequired","object","func","validator__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_1__","hasOwnProperty","isEmpty","isEmail","domain_specific_validation","oldPassword","newPassword"],"mappings":"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","file":"component---src-pages-signup-js-2b0deb3ce9674a01e3c1.js","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'gatsby'\nimport { Form } from 'reactstrap'\n\nimport './signup.module.scss'\n\nimport Button from '../Button'\nimport TextFieldGroup from '../TextFieldGroup'\n\nimport { validateInput } from '../../utils/validation'\nimport { performRegister } from '../../redux/ducks/account/actions'\nimport {\n  getIsLoggedIn,\n  getError,\n  accountIsLoading,\n} from '../../redux/ducks/account/selectors'\n\nclass SignupForm extends Component {\n  submitedTimer = null\n\n  state = {\n    email: '',\n    password: '',\n    errors: {},\n    submited: false,\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.submitedTimer)\n  }\n\n  isValid = () => {\n    const { errors, isValid } = validateInput(this.state)\n    this.setState({\n      errors,\n    })\n    return isValid\n  }\n\n  handleUpdate = event => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n\n    if (this.isValid()) {\n      this.props.signup(this.state.email, this.state.password)\n      this.setState({\n        submited: true,\n      })\n      this.submitedTimer = setTimeout(() => {\n        this.setState({\n          submited: false,\n        })\n      }, 4400)\n    }\n  }\n\n  render() {\n    const { errors, submited } = this.state\n    const { signupError, isLoading } = this.props\n\n    return (\n      <Form\n        onSubmit={event => {\n          this.handleSubmit(event)\n        }}\n        className=\"mx-auto\"\n        styleName=\"form\"\n      >\n        <TextFieldGroup\n          label=\"Email\"\n          type=\"email\"\n          field=\"email\"\n          onChange={this.handleUpdate}\n          id=\"signupEmail\"\n          placeholder=\"Enter Email\"\n          styleName=\"form__input\"\n          error={errors.email}\n        />\n        <TextFieldGroup\n          label=\"Password\"\n          type=\"password\"\n          field=\"password\"\n          onChange={this.handleUpdate}\n          id=\"signupPassword\"\n          placeholder=\"Password\"\n          styleName=\"form__input\"\n          error={errors.password}\n        />\n        {signupError && submited && (\n          <span styleName=\"form__alert\">{signupError.attributes.detail}</span>\n        )}\n        <Button styleName=\"form__btn\" disabled={isLoading} round>\n          Register\n        </Button>\n        <span styleName=\"form__login\">\n          Already have an account? <Link to=\"/login\">Login</Link>\n        </span>\n        <span className=\"mt-4 small\" styleName=\"form__login\">\n          By signing up, you agree to our <Link to=\"/tos\">Terms</Link> and that\n          you have read our <Link to=\"/privacy\">Privacy Policy</Link>.\n        </span>\n      </Form>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    signupError: getError(state),\n    isLoading: accountIsLoading(state),\n    isLoggedIn: getIsLoggedIn(state),\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signup: (email, password) => {\n      dispatch(performRegister.request(email, password))\n    },\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignupForm)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport SEO from '../components/seo'\n\nimport PageSpinner from '../components/Spinner/PageSpinner'\nimport SignupForm from '../components/Signup/SignupForm'\n\nclass Signup extends Component {\n  static propTypes = {\n    isLoading: PropTypes.bool,\n  }\n\n  static defaultProps = {\n    isLoading: false,\n  }\n\n  render() {\n    const { isLoading } = this.props\n\n    return (\n      <div className=\"page\">\n        <PageSpinner isLoading={isLoading}>\n          <SEO title=\"UserLAnd Signup\" />\n          <div className=\"container page__header\">\n            <h2>Sign up</h2>\n          </div>\n          <div className=\"container mb-5\">\n            <SignupForm />\n          </div>\n        </PageSpinner>\n      </div>\n    )\n  }\n}\n\nexport default Signup\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s - ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    >\n      {children}\n    </Helmet>\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  children: PropTypes.node,\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport './button.module.scss'\n\nfunction Button(props) {\n  let {\n    children,\n    icon,\n    tag: Tag,\n    className,\n    danger,\n    round,\n    ...attributes\n  } = props\n\n  if (attributes.href && Tag === 'button') {\n    Tag = 'a'\n  }\n\n  return (\n    <Tag\n      styleName={classNames('btn', {\n        btn_round: round,\n        btn_primary: !danger,\n        btn_danger: danger,\n      })}\n      className={className}\n      type={Tag === 'button' && attributes.onClick ? 'button' : undefined}\n      {...attributes}\n    >\n      {children}\n      {icon && <span styleName=\"icon\" />}\n    </Tag>\n  )\n}\n\nButton.propTypes = {\n  active: PropTypes.bool,\n  'aria-label': PropTypes.string,\n  disabled: PropTypes.bool,\n  tag: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.string,\n    PropTypes.object,\n  ]),\n  innerRef: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.func,\n    PropTypes.string,\n  ]),\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  danger: PropTypes.bool,\n  round: PropTypes.bool,\n}\n\nButton.defaultProps = {\n  tag: 'button',\n  danger: false,\n  round: false,\n}\n\nexport default Button\n","import { createSelector } from 'reselect'\n\nconst getAccount = state => state.accountState.account\nexport const accountIsLoading = state => state.accountState.isLoading\n\nexport const getError = state => state.accountState.error\n\nexport const getIsLoggedIn = createSelector(\n  [getAccount],\n  account => !!account && !!account.access_token\n)\n\nexport const getAccountDetails = createSelector(\n  [getAccount],\n  account => account\n)\n\nexport const getIsAccountDetailLoaded = createSelector(\n  [getAccount],\n  account => !!account\n)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { FormGroup, Label, Input, FormFeedback } from 'reactstrap'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport './TextFieldGroup.module.scss'\n\nfunction TextFieldGroup({\n  field,\n  type,\n  label,\n  placeholder,\n  id,\n  error,\n  onChange,\n  className,\n}) {\n  return (\n    <FormGroup styleName=\"form\">\n      <Label for={id} hidden>\n        {label}\n      </Label>\n      <Input\n        type={type}\n        name={field}\n        onChange={onChange}\n        id={id}\n        placeholder={placeholder}\n        invalid={!!error}\n        className={className}\n      />\n      {error && (\n        <FormFeedback tooltip>\n          <FontAwesomeIcon icon={['fa', 'exclamation-triangle']} />\n          {error}\n        </FormFeedback>\n      )}\n    </FormGroup>\n  )\n}\n\nTextFieldGroup.prototype = {\n  field: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  id: PropTypes.string,\n  error: PropTypes.object,\n  onChange: PropTypes.func.isRequired,\n}\n\nexport default TextFieldGroup\n","import { isEmail } from 'validator'\nimport { isEmpty } from 'lodash'\n\nexport const validateInput = data => {\n  let errors = {}\n\n  if (data.hasOwnProperty('email')) {\n    if (isEmpty(data.email)) {\n      errors.email = 'This field is required'\n    }\n    if (!isEmail(data.email, { domain_specific_validation: true })) {\n      errors.email = 'Email is invalid'\n    }\n  }\n\n  if (data.hasOwnProperty('password') && isEmpty(data.password)) {\n    errors.password = 'This field is required'\n  }\n\n  if (data.hasOwnProperty('oldPassword') && isEmpty(data.oldPassword)) {\n    errors.oldPassword = 'This field is required'\n  }\n\n  if (data.hasOwnProperty('newPassword') && isEmpty(data.newPassword)) {\n    errors.newPassword = 'This field is required'\n  }\n\n  return {\n    errors,\n    isValid: isEmpty(errors),\n  }\n}\n","import React from 'react'\n\nimport './spinner.module.scss'\n\nconst PageSpinner = ({ isLoading, children }) => {\n  return isLoading ? (\n    <div styleName=\"page__wrapper\" className=\"container\">\n      <div>\n        <div styleName=\"rect rect__one\" />\n        <div styleName=\"rect rect__two\" />\n        <div styleName=\"rect rect__three\" />\n      </div>\n    </div>\n  ) : (\n    children\n  )\n}\n\nexport default PageSpinner\n"],"sourceRoot":""}
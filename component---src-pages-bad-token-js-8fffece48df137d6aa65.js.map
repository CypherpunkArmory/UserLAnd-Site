{"version":3,"sources":["webpack:///./src/content/badToken.js","webpack:///./src/pages/bad-token.js","webpack:///./src/components/seo.js"],"names":["badToken","badTokenPage","react_default","a","createElement","className","seo","title","content","SEO","_ref","description","lang","meta","children","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","property","author","concat","defaultProps"],"mappings":"qHAAeA,EACF,YADEA,EAGX,+BCaWC,UAVM,kBACnBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKC,MAAM,gCACXL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,UAAKI,GACLN,EAAAC,EAAAC,cAAA,SAAII,uFCCV,SAASC,EAATC,GAA2D,IAA5CC,EAA4CD,EAA5CC,YAAaC,EAA+BF,EAA/BE,KAAMC,EAAyBH,EAAzBG,KAAMN,EAAmBG,EAAnBH,MAAOO,EAAYJ,EAAZI,SACrCC,EADiDC,EAAAC,KACjDF,KAcFG,EAAkBP,GAAeI,EAAKI,aAAaR,YAEzD,OACES,EAAAjB,EAAAC,cAACiB,EAAAlB,EAAD,CACEmB,eAAgB,CACdV,QAEFL,MAAOA,EACPgB,cAAa,QAAUR,EAAKI,aAAaZ,MACzCM,KAAM,CACJ,CACEW,KAAI,cACJhB,QAASU,GAEX,CACEO,SAAQ,WACRjB,QAASD,GAEX,CACEkB,SAAQ,iBACRjB,QAASU,GAEX,CACEO,SAAQ,UACRjB,QAAO,WAET,CACEgB,KAAI,eACJhB,QAAO,WAET,CACEgB,KAAI,kBACJhB,QAASO,EAAKI,aAAaO,QAE7B,CACEF,KAAI,gBACJhB,QAASD,GAEX,CACEiB,KAAI,sBACJhB,QAASU,IAEXS,OAAOd,IAERC,GAKPL,EAAImB,aAAe,CACjBhB,KAAI,KACJC,KAAM,GACNF,YAAW,IAWEF","file":"component---src-pages-bad-token-js-8fffece48df137d6aa65.js","sourcesContent":["export default {\n  pageTitle: 'Bad Token',\n  pageSubtitle:\n    'Bad token received.',\n}\n","import React from 'react'\n\nimport content from '../content/badToken'\n\nimport SEO from '../components/seo'\n\nconst badTokenPage = () => (\n  <div className=\"page\">\n    <SEO title=\"UserLAnd Bad Token Received\" />\n    <div className=\"container page__header\">\n      <h2>{content.pageTitle}</h2>\n      <p>{content.pageSubtitle}</p>\n    </div>\n  </div>\n)\n\nexport default badTokenPage\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s - ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    >\n      {children}\n    </Helmet>\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  children: PropTypes.node,\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}
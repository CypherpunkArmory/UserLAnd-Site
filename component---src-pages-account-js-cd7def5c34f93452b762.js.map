{"version":3,"sources":["webpack:///./src/components/Account/AccountMenu.js","webpack:///./node_modules/reactstrap/es/Table.js","webpack:///./src/components/Account/AccountBilling.js","webpack:///./src/components/Account/ApiKey.js","webpack:///./src/components/Account/SettingEditor.js","webpack:///./src/components/Account/SettingField.js","webpack:///./src/components/Account/DeleteAccount.js","webpack:///./src/components/Account/AccountOverview.js","webpack:///./src/components/Account/AccountManagement.js","webpack:///./src/components/PrivateRoute/index.js","webpack:///./src/components/Account/ResetPassword.js","webpack:///./src/pages/account.js","webpack:///./src/components/seo.js","webpack:///./src/components/Button/index.js","webpack:///./src/redux/ducks/account/selectors.js","webpack:///./src/components/TextFieldGroup/index.js","webpack:///./src/utils/validation.js","webpack:///./src/components/Modal/index.js","webpack:///./src/components/Spinner/PageSpinner.js"],"names":["AccountMenu","render","routes","this","props","react_default","a","createElement","className","map","item","key","name","gatsby_browser_entry","to","route","Component","propTypes","prop_types_default","string","cssModule","object","size","bordered","bool","borderless","striped","dark","hover","responsive","oneOfType","tag","utils","responsiveTag","innerRef","func","Table_Table","Tag","ResponsiveTag","attributes","Object","objectWithoutPropertiesLoose","classes","classnames_default","table","esm_extends","ref","responsiveClassName","defaultProps","es_Table","AccountBilling","href","ApiKey","clipAreaRef","React","createRef","copiedTimer","state","copied","modal","handlesClipboardCopy","e","_this","current","select","document","execCommand","target","focus","setState","setTimeout","toggleModal","componentWillUnmount","clearInterval","_this$props","APIKey","updateAPIKey","_this$state","Modal","handlesClose","Button","onClick","round","getClassName_default","classnammes","api-key__code_active","_styleModuleImportMap","type","value","readOnly","queryCommandSupported","index_es","icon","faCopy","fixedWidth","faRedo","connect","dispatch","revokeTokens","request","SettingEditor","fields","reduce","prev","curr","_Object$assign","assign","field","submitedTimer","errors","submited","isValid","_validateInput","validateInput","handleUpdate","event","_this$setState","handleSubmit","preventDefault","onSubmit","_this2","submitError","isLoading","Form","TextFieldGroup","id","onChange","error","disabled","SettingField","collapsed","componentDidUpdate","prevProps","toggleCollapse","label","fieldText","classnames","field_open","SettingField_styleModuleImportMap","Fragment","faTimes","SettingEditor_SettingEditor","payload","faEdit","DeleteAccount","placeholder","handlesSubmit","password","AccountOverview","updateEmailError","updatePasswordFields","updateEmailFields","updatePassword","updateAccount","new_password","newPassword","old_password","oldPassword","updateEmail","_ref","newEmail","repeatedEmail","email","account","deleteAccount","errorDetail","detail","SettingField_SettingField","DeleteAccount_DeleteAccount","deleteAccountFields","getError","accountIsLoading","newDetails","AccountManagement","Account_AccountMenu","es","Account_ApiKey","path","Account_AccountOverview","default","Account_AccountBilling","PrivateRoute","component","location","isLoggedIn","rest","_objectWithoutPropertiesLoose","pathname","window","navigate","ResetPassword","componentDidMount","getConfirmationToken","token","_this$props2","authIsLoading","seo","title","PageSpinner","resetPassword","AccountPage","components_PrivateRoute","Account_ResetPassword","getIsLoggedIn","getAccountDetails","SEO","description","lang","meta","children","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","content","property","author","concat","danger","react__WEBPACK_IMPORTED_MODULE_6___default","undefined","babel_plugin_react_css_modules_dist_browser_getClassName__WEBPACK_IMPORTED_MODULE_5___default","classNames","btn_round","btn_primary","btn_danger","__webpack_require__","d","__webpack_exports__","reselect__WEBPACK_IMPORTED_MODULE_0__","getAccount","accountState","createSelector","access_token","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","reactstrap__WEBPACK_IMPORTED_MODULE_2__","reactstrap__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_6__","for","hidden","invalid","tooltip","prototype","PropTypes","isRequired","validator__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_1__","hasOwnProperty","isEmpty","isEmail","domain_specific_validation","body","classList","add","remove","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_2__"],"mappings":"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","file":"component---src-pages-account-js-cd7def5c34f93452b762.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\nimport './account.module.scss'\n\nclass AccountMenu extends Component {\n  static propTypes = {\n    routes: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string))\n  }\n  render() {\n    const { routes } = this.props\n\n    return (\n      <ul styleName=\"nav\">\n        {routes.map(item => {\n          return (\n            <li key={item.name}>\n              <Link to={item.route}>{item.name}</Link>\n            </li>\n          )\n        })}\n      </ul>\n    )\n  }\n}\n\nexport default AccountMenu\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  size: PropTypes.string,\n  bordered: PropTypes.bool,\n  borderless: PropTypes.bool,\n  striped: PropTypes.bool,\n  dark: PropTypes.bool,\n  hover: PropTypes.bool,\n  responsive: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  tag: tagPropType,\n  responsiveTag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object])\n};\nvar defaultProps = {\n  tag: 'table',\n  responsiveTag: 'div'\n};\n\nvar Table = function Table(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      size = props.size,\n      bordered = props.bordered,\n      borderless = props.borderless,\n      striped = props.striped,\n      dark = props.dark,\n      hover = props.hover,\n      responsive = props.responsive,\n      Tag = props.tag,\n      ResponsiveTag = props.responsiveTag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"size\", \"bordered\", \"borderless\", \"striped\", \"dark\", \"hover\", \"responsive\", \"tag\", \"responsiveTag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'table', size ? 'table-' + size : false, bordered ? 'table-bordered' : false, borderless ? 'table-borderless' : false, striped ? 'table-striped' : false, dark ? 'table-dark' : false, hover ? 'table-hover' : false), cssModule);\n  var table = React.createElement(Tag, _extends({}, attributes, {\n    ref: innerRef,\n    className: classes\n  }));\n\n  if (responsive) {\n    var responsiveClassName = mapToCssModules(responsive === true ? 'table-responsive' : \"table-responsive-\" + responsive, cssModule);\n    return React.createElement(ResponsiveTag, {\n      className: responsiveClassName\n    }, table);\n  }\n\n  return table;\n};\n\nTable.propTypes = propTypes;\nTable.defaultProps = defaultProps;\nexport default Table;","import React, { Component } from 'react'\nimport { Table } from 'reactstrap'\n\nimport './account.module.scss'\n\nclass AccountBilling extends Component {\n  render() {\n    return (\n      <div styleName=\"pannel billing\">\n        <h2 className=\"mb-4\">Billing</h2>\n        <div styleName=\"pannel__body\">\n          <h3 className=\"mb-4\">Plans</h3>\n          <ul styleName=\"plan-list\">\n            <li styleName=\"plan plan_active\">\n              <h4>Beta</h4>\n              <div className=\"plan__body\">Totally free</div>\n            </li>\n            <li styleName=\"plan plan_disabled\">\n              <h4>Free</h4>\n              <div className=\"plan__body\">Totally free</div>\n            </li>\n            <li styleName=\"plan plan_disabled\">\n              <h4>Premium</h4>\n              <div className=\"plan__body\">Only $5.00</div>\n            </li>\n          </ul>\n          <h3 className=\"mb-4\">Billing History</h3>\n          <Table styleName=\"billing-history\" striped borderless>\n            <thead>\n              <tr>\n                <th>Date</th>\n                <th>Description</th>\n                <th>Amount</th>\n                <th />\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>Month Day, Year</td>\n                <td>Beta (Month Day, Year - Month Day, Year)</td>\n                <td>$0</td>\n                <td>\n                  <a href=\"https://google.com\">View Invoice</a>\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default AccountBilling\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport classnammes from 'classnames'\n\nimport './account.module.scss'\n\nimport { revokeTokens } from '../../redux/ducks/account/actions'\n\nimport Modal from '../Modal'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCopy, faRedo } from '@fortawesome/free-solid-svg-icons'\nimport Button from '../Button'\n\nclass ApiKey extends Component {\n  clipAreaRef = React.createRef()\n  copiedTimer = null\n\n  state = {\n    copied: false,\n    modal: false,\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.copiedTimer)\n  }\n\n  handlesClipboardCopy = e => {\n    this.clipAreaRef.current.select()\n    document.execCommand('copy')\n    e.target.focus()\n\n    this.setState({\n      copied: true,\n    })\n\n    this.copiedTimer = setTimeout(() => {\n      this.setState({\n        copied: false,\n      })\n    }, 200)\n  }\n\n  toggleModal = () => {\n    this.setState({\n      modal: !this.state.modal,\n    })\n  }\n\n  render() {\n    const { APIKey, updateAPIKey } = this.props\n    const { modal, copied } = this.state\n\n    return (\n      <div styleName=\"pannel\">\n        <h2 className=\"mb-4\">API Key</h2>\n        <div styleName=\"api-key\">\n          {modal && (\n            <Modal handlesClose={this.toggleModal}>\n              <h3 className=\"mb-3\" styleName=\"text_error\">\n                Revoke API key\n              </h3>\n              <p className=\"mb-3\">\n                By confirming you understand that this can’t be undone and any\n                tunnels started with this API Key will no longer be able to\n                connect. <br />\n                <b>You will be disconnected soon after.</b>\n              </p>\n              <Button onClick={updateAPIKey} round>\n                Confirm\n              </Button>\n            </Modal>\n          )}\n          <span\n            styleName={classnammes('api-key__code', {\n              'api-key__code_active': copied,\n            })}\n            onClick={this.handlesClipboardCopy}\n          >\n            <input ref={this.clipAreaRef} type=\"text\" value={APIKey} readOnly />\n            <div styleName=\"api-key__controls\">\n              {document.queryCommandSupported('copy') && (\n                <button onClick={this.handlesClipboardCopy}>\n                  <FontAwesomeIcon icon={faCopy} fixedWidth />\n                </button>\n              )}\n            </div>\n          </span>\n          <button\n            styleName=\"api-key__button api-key__button_danger\"\n            onClick={this.toggleModal}\n          >\n            <FontAwesomeIcon icon={faRedo} fixedWidth />\n            Revoke All\n          </button>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateAPIKey: () => {\n      dispatch(revokeTokens.request())\n    },\n  }\n}\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(ApiKey)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Form } from 'reactstrap'\n\nimport './settingField.module.scss'\n\nimport Button from '../Button'\nimport TextFieldGroup from '../TextFieldGroup'\n\nimport { validateInput } from '../../utils/validation'\n\nexport default class SettingEditor extends Component {\n  fields = this.props.fields.reduce((prev, curr) => {\n    return {\n      ...prev,\n      [curr.field]: '',\n    }\n  }, {})\n  submitedTimer = null\n\n  state = {\n    errors: {},\n    submited: false,\n    ...this.fields,\n  }\n\n  static propTypes = {\n    fields: PropTypes.arrayOf(PropTypes.object),\n    onSubmit: PropTypes.func,\n    isLoading: PropTypes.bool,\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.submitedTimer)\n  }\n\n  isValid = () => {\n    const { errors, isValid } = validateInput(this.state)\n    this.setState({\n      errors,\n    })\n    return isValid\n  }\n\n  handleUpdate = event => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    this.setState({\n      submited: true,\n    })\n\n    this.submitedTimer = setTimeout(() => {\n      this.setState({\n        submited: false,\n      })\n    }, 3400)\n\n    if (this.isValid()) {\n      this.props.onSubmit(this.state)\n    }\n  }\n\n  render() {\n    const { errors, submited } = this.state\n    const { fields, submitError, isLoading } = this.props\n\n    return (\n      <Form onSubmit={this.handleSubmit} styleName=\"field__editor\">\n        {fields.map(field => {\n          return (\n            <TextFieldGroup\n              key={field.id}\n              onChange={this.handleUpdate}\n              error={errors[field.field]}\n              {...field}\n            />\n          )\n        })}\n        {submited && submitError && (\n          <span styleName=\"field__error\">{submitError}</span>\n        )}\n        <Button round disabled={isLoading}>\n          Submit\n        </Button>\n      </Form>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\nimport './settingField.module.scss'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport SettingEditor from './SettingEditor'\n\nexport default class SettingField extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    label: PropTypes.string,\n    fieldText: PropTypes.string,\n    fields: PropTypes.arrayOf(PropTypes.object),\n    onSubmit: PropTypes.func,\n    submitError: PropTypes.string,\n    isLoading: PropTypes.bool,\n  }\n\n  static defaultProps = {\n    label: 'email',\n    fieldText: 'myemail@provider.com',\n    submitError: '',\n    isLoading: false,\n  }\n\n  state = {\n    collapsed: false,\n  }\n\n  componentDidUpdate = prevProps => {\n    if (\n      this.props.isLoading !== prevProps.isLoading ||\n      this.props.submitError !== prevProps.submitError\n    ) {\n      if (!this.props.submitError && !this.props.isLoading) {\n        this.setState({\n          collapsed: false,\n        })\n      }\n    }\n  }\n  toggleCollapse = () => {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    })\n  }\n\n  render() {\n    const { collapsed } = this.state\n    const { label, fieldText, fields, submitError, isLoading } = this.props\n\n    return (\n      <div\n        styleName={classnames('field', {\n          field_open: collapsed,\n        })}\n      >\n        {!collapsed ? (\n          <div onClick={this.toggleCollapse} styleName=\"field__link\">\n            <span>{label}</span>\n            <span>{fieldText}</span>\n            <span>\n              <FontAwesomeIcon icon={faEdit} />\n            </span>\n          </div>\n        ) : (\n          <>\n            <span styleName=\"field__close\" onClick={this.toggleCollapse}>\n              <FontAwesomeIcon icon={faTimes} />\n            </span>\n            <SettingEditor\n              submitError={submitError}\n              onSubmit={payload => {\n                this.props.onSubmit(payload)\n              }}\n              isLoading={isLoading}\n              fields={fields}\n            />\n          </>\n        )}\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nimport './account.module.scss'\n\nimport Modal from '../Modal'\nimport SettingEditor from './SettingEditor'\n\nexport default class DeleteAccount extends Component {\n  fields = [\n    {\n      label: 'Current Password',\n      type: 'password',\n      field: 'password',\n      id: 'currPassword',\n      placeholder: 'Current Password',\n    },\n  ]\n\n  state = {\n    modal: false,\n  }\n\n  toggleModal = () => {\n    this.setState({\n      modal: !this.state.modal,\n    })\n  }\n\n  handlesSubmit = payload => {\n    this.props.onSubmit(payload.password)\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.modal && (\n          <Modal handlesClose={this.toggleModal}>\n            <h3 className=\"mb-3\" styleName=\"text_error\">\n              Delete Account\n            </h3>\n            <p className=\"mb-3\">\n              Deleting your account will permanently deactivate your profile\n              and delete all your tunnels. This can't be undone.\n            </p>\n            <SettingEditor\n              onSubmit={this.handlesSubmit}\n              submitError={this.props.submitError}\n              fields={this.fields}\n              isLoading={this.props.isLoading}\n            />\n          </Modal>\n        )}\n        <button\n          styleName=\"delete-btn\"\n          className=\"btn\"\n          onClick={this.toggleModal}\n        >\n          Delete Account...\n        </button>\n      </>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport './account.module.scss'\n\nimport { updateAccount, deleteAccount } from '../../redux/ducks/account/actions'\nimport { getError, accountIsLoading } from '../../redux/ducks/account/selectors'\n\nimport SettingField from './SettingField'\nimport DeleteAccount from './DeleteAccount'\n\nclass AccountOverview extends Component {\n  state = {\n    updateEmailError: '',\n  }\n  updatePasswordFields = [\n    {\n      label: 'Old Password',\n      type: 'password',\n      field: 'oldPassword',\n      id: 'oldPassword',\n      placeholder: 'Old Password',\n    },\n    {\n      label: 'New Password',\n      type: 'password',\n      field: 'newPassword',\n      id: 'newPassword',\n      placeholder: 'New Password',\n    },\n  ]\n  updateEmailFields = [\n    {\n      label: 'New Email',\n      type: 'email',\n      field: 'newEmail',\n      id: 'newEmail',\n      placeholder: 'New Email',\n    },\n    {\n      label: 'Repeat Email',\n      type: 'email',\n      field: 'repeatedEmail',\n      id: 'repeatedEmail',\n      placeholder: 'Repeat New Email',\n    },\n  ]\n\n  updatePassword = payload => {\n    this.props.updateAccount({\n      new_password: payload.newPassword,\n      old_password: payload.oldPassword,\n    })\n    return true\n  }\n\n  updateEmail = ({ newEmail, repeatedEmail }) => {\n    if (newEmail !== repeatedEmail) {\n      this.setState({\n        updateEmailError: 'New email need to match',\n      })\n      return false\n    } else {\n      this.setState({\n        updateEmailError: '',\n      })\n      this.props.updateAccount({ email: newEmail })\n      return true\n    }\n  }\n\n  render() {\n    const { account, deleteAccount, error, isLoading } = this.props\n    const errorDetail = error && error.attributes.detail\n\n    return (\n      <div styleName=\"pannel\">\n        <h2 className=\"mb-4\">Account Overview</h2>\n        <div styleName=\"pannel__body\">\n          <SettingField\n            label=\"Email\"\n            fieldText={account.email}\n            onSubmit={this.updateEmail}\n            isLoading={isLoading}\n            submitError={this.state.updateEmailError || errorDetail}\n            fields={this.updateEmailFields}\n          />\n          <SettingField\n            label=\"Password\"\n            fieldText=\"●●●●●●●●●●●●●\"\n            onSubmit={this.updatePassword}\n            isLoading={isLoading}\n            submitError={errorDetail}\n            fields={this.updatePasswordFields}\n            />\n          <hr />\n          <DeleteAccount\n            onSubmit={deleteAccount}\n            submitError={errorDetail}\n            isLoading={isLoading}\n            fields={this.deleteAccountFields}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    error: getError(state),\n    isLoading: accountIsLoading(state),\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateAccount: newDetails => {\n      dispatch(updateAccount.request(newDetails))\n    },\n    deleteAccount: password => {\n      dispatch(deleteAccount.request(password))\n    },\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AccountOverview)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Router } from '@reach/router'\n\nimport './account.module.scss'\n\nimport AccountMenu from './AccountMenu'\nimport AccountBilling from './AccountBilling'\nimport ApiKey from './ApiKey'\nimport AccountOverview from './AccountOverview'\n\nclass AccountManagement extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    account: PropTypes.object,\n  }\n\n  render() {\n    const { account } = this.props\n    const routes = [\n      { name: 'Account Overview', route: '/account/overview' },\n      { name: 'Auth Key', route: '/account/key' },\n      { name: 'Billing', route: '/account/billing' },\n    ]\n\n    return (\n      <>\n        <div styleName=\"main\" className=\"page container\">\n          <AccountMenu routes={routes} />\n          <Router className=\"w-100\">\n            <ApiKey APIKey={account.APIKey} path=\"/key\" />\n            <AccountOverview account={account} path=\"/overview\" />\n            <AccountOverview account={account} default />\n            <AccountBilling path=\"/billing\" />\n          </Router>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default AccountManagement\n","import React from 'react'\nimport { navigate } from 'gatsby'\n\nconst PrivateRoute = ({\n  component: Component,\n  location,\n  isLoggedIn,\n  ...rest\n}) => {\n  if (!isLoggedIn && location.pathname !== `/login`) {\n    // If the user is not logged in, redirect to the login page.\n    typeof window !== 'undefined' && navigate(`/login`)\n    return null\n  }\n\n  return <Component {...rest} />\n}\n\nexport default PrivateRoute\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport SEO from '../seo'\n\nimport '../Login/login.module.scss'\n\nimport { Form } from 'reactstrap'\nimport Button from '../Button'\nimport TextFieldGroup from '../TextFieldGroup'\n\nimport { validateInput } from '../../utils/validation'\nimport {\n  getConfirmationToken,\n  resetPassword,\n} from '../../redux/ducks/account/actions'\nimport { accountIsLoading } from '../../redux/ducks/account/selectors'\nimport { authIsLoading } from '../../redux/ducks/auth/selectors'\nimport PageSpinner from '../Spinner/PageSpinner'\n\nclass ResetPassword extends Component {\n  submitedTimer = null\n\n  state = {\n    newPassword: '',\n    errors: {},\n    submited: false,\n  }\n\n  componentDidMount = () => {\n    const { getConfirmationToken, token } = this.props\n    getConfirmationToken(token)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.submitedTimer)\n  }\n\n  isValid = () => {\n    const { errors, isValid } = validateInput(this.state)\n    this.setState({\n      errors,\n    })\n    return isValid\n  }\n\n  handleUpdate = event => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    const { updatePassword } = this.props\n    const { newPassword } = this.state\n\n    if (this.isValid()) {\n      updatePassword(newPassword)\n    }\n    this.setState({\n      submited: true,\n    })\n    this.submitedTimer = setTimeout(() => {\n      this.setState({\n        submited: false,\n      })\n    }, 4400)\n  }\n\n  render() {\n    const { errors, submited } = this.state\n    const { isLoading, authIsLoading } = this.props\n\n    return (\n      <div className=\"page\">\n        <SEO title=\"UserLAnd Reset Password\" />\n        <PageSpinner isLoading={isLoading || authIsLoading}>\n          <div className=\"container page__header\">\n            <h2>Reset Password</h2>\n          </div>\n          <div className=\"container\">\n            <Form\n              onSubmit={this.handleSubmit}\n              className=\"mx-auto text-center\"\n              styleName=\"form\"\n            >\n              <TextFieldGroup\n                label=\"New Password\"\n                type=\"password\"\n                field=\"newPassword\"\n                onChange={this.handleUpdate}\n                id=\"newPassword\"\n                placeholder=\"New Password\"\n                styleName=\"form__input\"\n                error={errors.newPassword}\n              />\n              {errors.newPassword && submited && (\n                <span styleName=\"form__alert\">{errors.newPassword}</span>\n              )}\n              <Button styleName=\"form__btn\" round>\n                submit\n              </Button>\n            </Form>\n          </div>\n        </PageSpinner>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoading: accountIsLoading(state),\n    authIsLoading: authIsLoading(state),\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getConfirmationToken: token => {\n      dispatch(getConfirmationToken.request(token))\n    },\n    updatePassword: new_password => {\n      dispatch(resetPassword.request(new_password))\n    },\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ResetPassword)\n","import React, { Component } from 'react'\nimport { Router } from '@reach/router'\nimport { connect } from 'react-redux'\n\nimport AccountManagement from '../components/Account/AccountManagement'\nimport PrivateRoute from '../components/PrivateRoute'\n\nimport { getAccountDetails } from '../redux/ducks/account/selectors'\n\nimport { getIsLoggedIn } from '../redux/ducks/auth/selectors'\n\nimport ResetPassword from '../components/Account/ResetPassword'\n\nclass AccountPage extends Component {\n  render() {\n    const { isLoggedIn, account } = this.props\n\n    return (\n      <Router>\n        <PrivateRoute\n          path=\"/account/*\"\n          component={AccountManagement}\n          account={account}\n          isLoggedIn={isLoggedIn}\n        />\n        <ResetPassword path=\"/account/confirm/:token\" />\n      </Router>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoggedIn: getIsLoggedIn(state),\n    account: getAccountDetails(state),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(AccountPage)\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s - ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    >\n      {children}\n    </Helmet>\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  children: PropTypes.node,\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport './button.module.scss'\n\nfunction Button(props) {\n  let {\n    children,\n    icon,\n    tag: Tag,\n    className,\n    danger,\n    round,\n    ...attributes\n  } = props\n\n  if (attributes.href && Tag === 'button') {\n    Tag = 'a'\n  }\n\n  return (\n    <Tag\n      styleName={classNames('btn', {\n        btn_round: round,\n        btn_primary: !danger,\n        btn_danger: danger,\n      })}\n      className={className}\n      type={Tag === 'button' && attributes.onClick ? 'button' : undefined}\n      {...attributes}\n    >\n      {children}\n      {icon && <span styleName=\"icon\" />}\n    </Tag>\n  )\n}\n\nButton.propTypes = {\n  active: PropTypes.bool,\n  'aria-label': PropTypes.string,\n  disabled: PropTypes.bool,\n  tag: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.string,\n    PropTypes.object,\n  ]),\n  innerRef: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.func,\n    PropTypes.string,\n  ]),\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  danger: PropTypes.bool,\n  round: PropTypes.bool,\n}\n\nButton.defaultProps = {\n  tag: 'button',\n  danger: false,\n  round: false,\n}\n\nexport default Button\n","import { createSelector } from 'reselect'\n\nconst getAccount = state => state.accountState.account\nexport const accountIsLoading = state => state.accountState.isLoading\n\nexport const getError = state => state.accountState.error\n\nexport const getIsLoggedIn = createSelector(\n  [getAccount],\n  account => !!account && !!account.access_token\n)\n\nexport const getAccountDetails = createSelector(\n  [getAccount],\n  account => account\n)\n\nexport const getIsAccountDetailLoaded = createSelector(\n  [getAccount],\n  account => !!account\n)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { FormGroup, Label, Input, FormFeedback } from 'reactstrap'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport './TextFieldGroup.module.scss'\n\nfunction TextFieldGroup({\n  field,\n  type,\n  label,\n  placeholder,\n  id,\n  error,\n  onChange,\n  className,\n}) {\n  return (\n    <FormGroup styleName=\"form\">\n      <Label for={id} hidden>\n        {label}\n      </Label>\n      <Input\n        type={type}\n        name={field}\n        onChange={onChange}\n        id={id}\n        placeholder={placeholder}\n        invalid={!!error}\n        className={className}\n      />\n      {error && (\n        <FormFeedback tooltip>\n          <FontAwesomeIcon icon={['fa', 'exclamation-triangle']} />\n          {error}\n        </FormFeedback>\n      )}\n    </FormGroup>\n  )\n}\n\nTextFieldGroup.prototype = {\n  field: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  id: PropTypes.string,\n  error: PropTypes.object,\n  onChange: PropTypes.func.isRequired,\n}\n\nexport default TextFieldGroup\n","import { isEmail } from 'validator'\nimport { isEmpty } from 'lodash'\n\nexport const validateInput = data => {\n  let errors = {}\n\n  if (data.hasOwnProperty('email')) {\n    if (isEmpty(data.email)) {\n      errors.email = 'This field is required'\n    }\n    if (!isEmail(data.email, { domain_specific_validation: true })) {\n      errors.email = 'Email is invalid'\n    }\n  }\n\n  if (data.hasOwnProperty('password') && isEmpty(data.password)) {\n    errors.password = 'This field is required'\n  }\n\n  if (data.hasOwnProperty('oldPassword') && isEmpty(data.oldPassword)) {\n    errors.oldPassword = 'This field is required'\n  }\n\n  if (data.hasOwnProperty('newPassword') && isEmpty(data.newPassword)) {\n    errors.newPassword = 'This field is required'\n  }\n\n  return {\n    errors,\n    isValid: isEmpty(errors),\n  }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport './modal.module.scss'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nexport default class Modal extends Component {\n  static propTypes = {\n    handlesClose: PropTypes.func,\n    className: PropTypes.string,\n    children: PropTypes.node,\n  }\n\n  componentDidMount() {\n    document.body.classList.add('no-scroll')\n  }\n  componentWillUnmount() {\n    document.body.classList.remove('no-scroll')\n  }\n  render() {\n    const { children, handlesClose, className } = this.props\n    return (\n      <div className={className} styleName=\"modal\">\n        <div styleName=\"modal__card\">\n          <button styleName=\"modal__close\" onClick={handlesClose}>\n            <FontAwesomeIcon icon={faTimes} />\n          </button>\n          {children}\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\n\nimport './spinner.module.scss'\n\nconst PageSpinner = ({ isLoading, children }) => {\n  return isLoading ? (\n    <div styleName=\"page__wrapper\" className=\"container\">\n      <div>\n        <div styleName=\"rect rect__one\" />\n        <div styleName=\"rect rect__two\" />\n        <div styleName=\"rect rect__three\" />\n      </div>\n    </div>\n  ) : (\n    children\n  )\n}\n\nexport default PageSpinner\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/content/jobs.js","webpack:///./src/pages/jobs.js","webpack:///./src/components/seo.js"],"names":["jobs","title","applicationDeadline","description","requirements","Job","_ref","react_default","a","createElement","className","map","requirement","key","href","jobsPage","seo","jobstext","job","jobs_Job","Object","assign","SEO","lang","meta","children","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"4HAAeA,EAAA,CACXA,KAAM,CACF,CACIC,MAAO,8BACPC,oBAAqB,MACrBC,YAAa,oGACbC,aAAc,CACV,4BCAVC,EAAM,SAAAC,GAA+D,IAA5DL,EAA4DK,EAA5DL,MAAOC,EAAqDI,EAArDJ,oBAAqBC,EAAgCG,EAAhCH,YAAaC,EAAmBE,EAAnBF,aACtD,OACEG,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcT,GAC5BM,EAAAC,EAAAC,cAAA,mCAA2BP,IAE7BK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,SAAIN,GACJI,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBACXN,EAAaO,IAAI,SAACC,EAAaC,GAAd,OAChBN,EAAAC,EAAAC,cAAA,MAAII,IAAKA,GAAMD,MAGnBL,EAAAC,EAAAC,cAAA,2DACkD,IAChDF,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,KACEC,UAAU,sBACVI,KAAK,6BAFP,4BAuCCC,UAzBE,kBACfR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACEf,MAAM,OACNE,YAAY,yDAEdI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,mCAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,qBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,UACGQ,EAASjB,KAAKW,IAAI,SAACO,EAAKL,GAAN,OACjBN,EAAAC,EAAAC,cAACU,EAADC,OAAAC,OAAA,CAAKR,IAAKA,GAASK,4FC5C/B,SAASI,EAAThB,GAA2D,IAA5CH,EAA4CG,EAA5CH,YAAaoB,EAA+BjB,EAA/BiB,KAAMC,EAAyBlB,EAAzBkB,KAAMvB,EAAmBK,EAAnBL,MAAOwB,EAAYnB,EAAZmB,SACrCC,EADiDC,EAAAC,KACjDF,KAcFG,EAAkB1B,GAAeuB,EAAKI,aAAa3B,YAEzD,OACE4B,EAAAvB,EAAAC,cAACuB,EAAAxB,EAAD,CACEyB,eAAgB,CACdV,QAEFtB,MAAOA,EACPiC,cAAa,QAAUR,EAAKI,aAAa7B,MACzCuB,KAAM,CACJ,CACEW,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAASnC,GAEX,CACEoC,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASV,EAAKI,aAAaQ,QAE7B,CACEH,KAAI,gBACJC,QAASnC,GAEX,CACEkC,KAAI,sBACJC,QAASP,IAEXU,OAAOf,IAERC,GAKPH,EAAIkB,aAAe,CACjBjB,KAAI,KACJC,KAAM,GACNrB,YAAW,IAWEmB","file":"component---src-pages-jobs-js-208695aa84b87774a7fd.js","sourcesContent":["export default {\n    jobs: [\n        {\n            title: \"No positions open currently\",\n            applicationDeadline: \"TBD\",\n            description: \"We have currently filled all of the positions that we have funding for.  Please check back later.\",\n            requirements: [\n                \"TBD\",\n            ]\n        },\n    ]\n}\n","import React from 'react'\n\nimport jobstext from '../content/jobs'\nimport '../styles/jobs.scss'\n\nimport SEO from '../components/seo'\n\nconst Job = ({ title, applicationDeadline, description, requirements }) => {\n  return (\n    <li className=\"job\">\n      <div className=\"row\">\n        <div className=\"job__head col-lg-4\">\n          <h4 className=\"job__title\">{title}</h4>\n          <h5>Application Deadline: {applicationDeadline}</h5>\n        </div>\n        <div className=\"job__body col-lg-8\">\n          <p>{description}</p>\n          <ul className=\"job__requirements\">\n            {requirements.map((requirement, key) => (\n              <li key={key}>{requirement}</li>\n            ))}\n          </ul>\n          <p>\n            To apply, email your resume and cover letter to{' '}\n            <strong>\n              <a\n                className=\"link link_underline\"\n                href=\"mailto:jobs@userland.tech\"\n              >\n                jobs@userland.tech\n              </a>\n            </strong>\n          </p>\n        </div>\n      </div>\n    </li>\n  )\n}\n\nconst jobsPage = () => (\n  <div className=\"jobs\">\n    <SEO\n      title=\"Jobs\"\n      description=\"Join UserLAnd and help us share Linux with the world\"\n    />\n    <div className=\"hero jobs__hero\">\n      <div className=\"jobs__hero_overlay\"></div>\n      <div className=\"container\">\n        <h1 className=\"hero__title\">The Possibilities Are Endless</h1>\n      </div>\n    </div>\n    <div className=\"container p-md-5 mt-5\">\n      <h1 className=\"jobs__title\"> Jobs at UserLAnd</h1>\n      <div className=\"jobs__section\">\n        <ul>\n          {jobstext.jobs.map((job, key) => (\n            <Job key={key} {...job} />\n          ))}\n        </ul>\n      </div>\n    </div>\n  </div>\n)\n\nexport default jobsPage\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s - ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    >\n      {children}\n    </Helmet>\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  children: PropTypes.node,\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}